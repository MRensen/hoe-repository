name: Build workflow

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest -cov -cov-fail-under=95

#      # Install Digital Ocean CLI
#      - name: Install doctl
#        uses: digitalocean/action-doctl@v2
#        with:
#         token: ${{ secrets.DO_TOKEN }}

#      # Log in to DigitalOcean Container Registry
#      - name: Log in to DigitalOcean
#        env:
#          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DO_TOKEN }}
#          DIGITALOCEAN_USERNAME: ${{ github.actor }}
#        run: |
#          echo "${DIGITALOCEAN_ACCESS_TOKEN}" | docker login registry.digitalocean.com -u "${DIGITALOCEAN_USERNAME}" --password-stdin


  # -------------------------
  # Docker build & push
  # -------------------------

      - name: Create lowercase image name
        run: |
            IMAGE_NAME_LOWER=$(echo "${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]')
            echo "IMAGE_NAME_LOWER=$IMAGE_NAME_LOWER" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        env:
                  COMMIT_HASH: ${{ github.sha }}
        run: |
          docker build -t $IMAGE_NAME_LOWER:latest -t $IMAGE_NAME_LOWER:$COMMIT_HASH .

      - name: Push Docker image
        env:
          COMMIT_HASH: ${{ github.sha }}
        run: |
          docker push $IMAGE_NAME_LOWER:latest
          docker push $IMAGE_NAME_LOWER:$COMMIT_HASH


      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubeconfig
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "${KUBE_CONFIG_DATA}" > $HOME/.kube/config

      - name: Update Deployment with New Image
        env:
          COMMIT_HASH: ${{ github.sha }}
        run: |
          kubectl set image deployment/belasting-deploy hoe-repository=$IMAGE_NAME_LOWER:$COMMIT_HASH -n bela-test
